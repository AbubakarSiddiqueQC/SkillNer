Search.setIndex({"docnames": ["api", "development", "generated/skillner.conflict_resolvers.SpanProcessor", "generated/skillner.core.Candidate", "generated/skillner.core.Document", "generated/skillner.core.Node", "generated/skillner.core.Pipeline", "generated/skillner.core.Sentence", "generated/skillner.core.Span", "generated/skillner.core.Word", "generated/skillner.matchers.SlidingWindowMatcher", "generated/skillner.text_loaders.StrTextLoader", "generated/skillner.word_processing.PorterStemmer", "generated/skillner.word_processing.TypeIdentifier", "generated/skillner.word_processing.WordProcessor", "index"], "filenames": ["api.rst", "development.rst", "generated/skillner.conflict_resolvers.SpanProcessor.rst", "generated/skillner.core.Candidate.rst", "generated/skillner.core.Document.rst", "generated/skillner.core.Node.rst", "generated/skillner.core.Pipeline.rst", "generated/skillner.core.Sentence.rst", "generated/skillner.core.Span.rst", "generated/skillner.core.Word.rst", "generated/skillner.matchers.SlidingWindowMatcher.rst", "generated/skillner.text_loaders.StrTextLoader.rst", "generated/skillner.word_processing.PorterStemmer.rst", "generated/skillner.word_processing.TypeIdentifier.rst", "generated/skillner.word_processing.WordProcessor.rst", "index.rst"], "titles": ["API Documentation", "Development", "skillner.conflict_resolvers.SpanProcessor", "skillner.core.Candidate", "skillner.core.Document", "skillner.core.Node", "skillner.core.Pipeline", "skillner.core.Sentence", "skillner.core.Span", "skillner.core.Word", "skillner.matchers.SlidingWindowMatcher", "skillner.text_loaders.StrTextLoader", "skillner.word_processing.PorterStemmer", "skillner.word_processing.TypeIdentifier", "skillner.word_processing.WordProcessor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">skillner</span></code>"], "terms": {"start": [1, 3, 8, 10], "fork": 1, "repositori": 1, "clone": 1, "cd": 1, "git": 1, "http": [1, 12], "github": [1, 12], "com": [1, 12], "you_github_usernam": 1, "skillner": 1, "instal": 1, "packag": 1, "mode": [1, 12], "pip": 1, "e": 1, "dev": 1, "et": 1, "voil\u00e0": 1, "you": [1, 12], "re": 1, "readi": 1, "hit": 1, "ground": 1, "run": [1, 2, 6, 14], "To": 1, "build": [1, 5, 10], "document": [1, 2, 5, 6, 9, 10, 11, 14], "follow": 1, "doc": [1, 2, 5, 6, 10, 11, 14], "make": 1, "html": 1, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dict_filt": [2, 14], "dict": [2, 6, 9, 10, 14], "str": [2, 3, 6, 9, 10, 11, 13, 14], "callabl": [2, 10, 14], "span": [2, 7, 10], "ani": 2, "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "processor": [2, 14], "function": [2, 10, 12, 13, 14], "all": [2, 7, 8, 12, 14], "word": [2, 3, 7, 8, 10, 12, 13, 14], "act": [2, 14], "individu": [2, 14], "It": [2, 14], "independ": [2, 14], "store": [2, 3, 4, 6, 7, 8, 9, 14], "result": [2, 3, 12, 14], "metadata": [2, 4, 7, 9, 14], "dictionari": [2, 6, 9, 10, 14], "paramet": [2, 3, 9, 10, 11, 12, 13, 14], "A": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15], "take": [2, 10, 14], "input": [2, 10, 14], "__init__": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "enrich_doc": [2, 5, 10, 11, 14], "enrich": [2, 4, 6, 7, 9, 11, 14], "everi": [2, 10, 14], "The": [2, 3, 6, 8, 10, 11, 12, 14], "window": [3, 8, 10], "slice": [3, 8], "concept_id": 3, "match": [3, 8, 10], "queri": [3, 10], "identifi": [3, 6, 13], "sentenc": [3, 4, 10, 11], "id": 3, "concept": 3, "knowledg": 3, "base": [3, 5, 12, 15], "attribut": [3, 6, 7, 8, 9, 12], "int": [3, 8, 10], "index": [3, 8, 10], "first": [3, 8], "end": [3, 8], "last": [3, 8], "sequenc": [4, 7], "like": [4, 7, 12, 13], "behavior": [4, 7, 12, 13], "i": [4, 6, 7, 8, 10, 12, 13], "list": [4, 7], "addit": [4, 7, 9], "throughout": [4, 7, 9], "pipelin": [5, 11], "block": 5, "arg": 5, "kwarg": 5, "abstract": 5, "appli": [5, 10], "transform": 5, "defin": 6, "wai": 6, "sequenti": 6, "dict_nod": 6, "node": 6, "correspond": 6, "name": 6, "add_nod": 6, "append": 6, "instanc": [6, 12, 13], "call": [6, 12, 13], "when": [6, 10], "among": 6, "other": [6, 12], "exampl": [7, 9], "from": [7, 8, 9, 10, 12, 15], "import": [7, 9], "": [7, 12], "li_word": 7, "w": [7, 9], "hello": 7, "welcom": 7, "split": 7, "len": 7, "5": 7, "2": 7, "li_span": 7, "candid": 8, "extend": 8, "most": 8, "left": 8, "right": 8, "delimit": 8, "add_candid": 8, "add": 8, "exist": [8, 12], "updat": 8, "is_empti": 8, "bool": [8, 12, 13], "return": [8, 10, 14], "whether": 8, "empti": 8, "consid": [8, 10], "ha": [8, 12, 13], "zero": 8, "size": 8, "behav": 9, "string": [9, 10, 11, 14], "initi": 9, "query_method": 10, "max_window_s": 10, "4": 10, "pre_filt": 10, "slide": 10, "us": [10, 11, 12], "shrink": 10, "algorithm": [10, 12], "find": 10, "entri": 10, "aka": 10, "respons": 10, "otherwis": 10, "default": [10, 12, 13], "maximum": 10, "number": 10, "construct": 10, "fals": 10, "befor": [10, 12, 13], "If": [10, 12, 13], "set": 10, "form": 10, "which": 10, "find_span": 10, "idx_word": 10, "given": 10, "ind": 10, "text": [11, 15], "loader": 11, "creat": 11, "to_lowercas": [12, 13], "true": [12, 13], "nltk_extens": 12, "stemmer": 12, "porter": 12, "stem": 12, "an": [12, 13], "henc": [12, 13], "can": [12, 13], "directli": [12, 13], "lowercas": [12, 13], "martin_extens": 12, "original_algorithm": 12, "see": 12, "below": 12, "more": 12, "detail": 12, "note": 12, "martin": 12, "endors": 12, "sever": 12, "modif": 12, "sinc": 12, "write": 12, "hi": 12, "origin": 12, "paper": 12, "those": 12, "extens": 12, "ar": 12, "includ": 12, "implement": 12, "websit": 12, "addition": 12, "have": 12, "propos": 12, "further": 12, "improv": 12, "nltk": 12, "contributor": 12, "There": 12, "thu": 12, "three": 12, "select": 12, "pass": 12, "appropri": 12, "constant": 12, "constructor": 12, "faith": 12, "deprec": 12, "thi": 12, "version": 12, "distribut": 12, "mani": 12, "languag": 12, "host": 12, "www": 12, "tartaru": 12, "org": 12, "he": 12, "strongli": 12, "recommend": 12, "against": 12, "publish": 12, "onli": 12, "clearli": 12, "understand": 12, "why": 12, "choos": 12, "do": 12, "so": 12, "declar": 12, "frozen": 12, "should": 12, "never": 12, "chang": 12, "devis": 12, "taken": 12, "modifi": 12, "found": 12, "web": 12, "For": 12, "best": 12, "howev": 12, "need": 12, "get": 12, "same": 12, "either": 12, "one": 12, "compat": 12, "dataset": 12, "instead": 12, "refer": 12, "copi": 12, "past": 12, "slight": 12, "cf": 12, "blob": 12, "develop": [12, 15], "py": 12, "m": 12, "suffix": 12, "strip": 12, "program": 12, "14": 12, "3": 12, "1980": 12, "130": 12, "137": 12, "link": 12, "homepag": 12, "classifi": 13, "standard": 13, "stop_word": 13, "check": 13, "type": 13, "identify_typ": 13, "smart": 15, "rule": 15, "nlp": 15, "modul": 15, "extract": 15, "skill": 15, "api": 15}, "objects": {"skillner.conflict_resolvers": [[2, 0, 1, "", "SpanProcessor"]], "skillner.conflict_resolvers.SpanProcessor": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "enrich_doc"]], "skillner.core": [[3, 0, 1, "", "Candidate"], [4, 0, 1, "", "Document"], [5, 0, 1, "", "Node"], [6, 0, 1, "", "Pipeline"], [7, 0, 1, "", "Sentence"], [8, 0, 1, "", "Span"], [9, 0, 1, "", "Word"]], "skillner.core.Candidate": [[3, 1, 1, "", "__init__"]], "skillner.core.Document": [[4, 1, 1, "", "__init__"]], "skillner.core.Node": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "enrich_doc"]], "skillner.core.Pipeline": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "add_node"], [6, 1, 1, "", "run"]], "skillner.core.Sentence": [[7, 1, 1, "", "__init__"]], "skillner.core.Span": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "add_candidate"], [8, 1, 1, "", "is_empty"]], "skillner.core.Word": [[9, 1, 1, "", "__init__"]], "skillner.matchers": [[10, 0, 1, "", "SlidingWindowMatcher"]], "skillner.matchers.SlidingWindowMatcher": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "enrich_doc"], [10, 1, 1, "", "find_span"]], "skillner.text_loaders": [[11, 0, 1, "", "StrTextLoader"]], "skillner.text_loaders.StrTextLoader": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "enrich_doc"]], "skillner.word_processing": [[12, 0, 1, "", "PorterStemmer"], [13, 0, 1, "", "TypeIdentifier"], [14, 0, 1, "", "WordProcessor"]], "skillner.word_processing.PorterStemmer": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "stem"]], "skillner.word_processing.TypeIdentifier": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "identify_type"]], "skillner.word_processing.WordProcessor": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "enrich_doc"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "document": [0, 4, 15], "conflict": 0, "resolv": 0, "word": [0, 9], "processor": 0, "matcher": [0, 10], "text": 0, "loader": 0, "data": 0, "structur": 0, "abstract": 0, "develop": 1, "skillner": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "conflict_resolv": 2, "spanprocessor": 2, "core": [3, 4, 5, 6, 7, 8, 9], "candid": 3, "node": 5, "pipelin": 6, "sentenc": 7, "span": 8, "slidingwindowmatch": 10, "text_load": 11, "strtextload": 11, "word_process": [12, 13, 14], "porterstemm": 12, "typeidentifi": 13, "wordprocessor": 14, "explor": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Conflict resolvers": [[0, "conflict-resolvers"]], "Word processor": [[0, "word-processor"]], "Matchers": [[0, "matchers"]], "Text loaders": [[0, "text-loaders"]], "Data structures": [[0, "data-structures"]], "Abstractions": [[0, "abstractions"]], "Development": [[1, "development"]], "skillner.conflict_resolvers.SpanProcessor": [[2, "skillner-conflict-resolvers-spanprocessor"]], "skillner.core.Candidate": [[3, "skillner-core-candidate"]], "skillner.core.Document": [[4, "skillner-core-document"]], "skillner.core.Node": [[5, "skillner-core-node"]], "skillner.core.Pipeline": [[6, "skillner-core-pipeline"]], "skillner.core.Sentence": [[7, "skillner-core-sentence"]], "skillner.core.Span": [[8, "skillner-core-span"]], "skillner.core.Word": [[9, "skillner-core-word"]], "skillner.matchers.SlidingWindowMatcher": [[10, "skillner-matchers-slidingwindowmatcher"]], "skillner.text_loaders.StrTextLoader": [[11, "skillner-text-loaders-strtextloader"]], "skillner.word_processing.PorterStemmer": [[12, "skillner-word-processing-porterstemmer"]], "skillner.word_processing.TypeIdentifier": [[13, "skillner-word-processing-typeidentifier"]], "skillner.word_processing.WordProcessor": [[14, "skillner-word-processing-wordprocessor"]], "skillner": [[15, "skillner"]], "Explore the documentation": [[15, "explore-the-documentation"]]}, "indexentries": {"spanprocessor (class in skillner.conflict_resolvers)": [[2, "skillner.conflict_resolvers.SpanProcessor"]], "__init__() (skillner.conflict_resolvers.spanprocessor method)": [[2, "skillner.conflict_resolvers.SpanProcessor.__init__"]], "enrich_doc() (skillner.conflict_resolvers.spanprocessor method)": [[2, "skillner.conflict_resolvers.SpanProcessor.enrich_doc"]], "candidate (class in skillner.core)": [[3, "skillner.core.Candidate"]], "__init__() (skillner.core.candidate method)": [[3, "skillner.core.Candidate.__init__"]], "document (class in skillner.core)": [[4, "skillner.core.Document"]], "__init__() (skillner.core.document method)": [[4, "skillner.core.Document.__init__"]], "node (class in skillner.core)": [[5, "skillner.core.Node"]], "__init__() (skillner.core.node method)": [[5, "skillner.core.Node.__init__"]], "enrich_doc() (skillner.core.node method)": [[5, "skillner.core.Node.enrich_doc"]], "pipeline (class in skillner.core)": [[6, "skillner.core.Pipeline"]], "__init__() (skillner.core.pipeline method)": [[6, "skillner.core.Pipeline.__init__"]], "add_node() (skillner.core.pipeline method)": [[6, "skillner.core.Pipeline.add_node"]], "run() (skillner.core.pipeline method)": [[6, "skillner.core.Pipeline.run"]], "sentence (class in skillner.core)": [[7, "skillner.core.Sentence"]], "__init__() (skillner.core.sentence method)": [[7, "skillner.core.Sentence.__init__"]], "span (class in skillner.core)": [[8, "skillner.core.Span"]], "__init__() (skillner.core.span method)": [[8, "skillner.core.Span.__init__"]], "add_candidate() (skillner.core.span method)": [[8, "skillner.core.Span.add_candidate"]], "is_empty() (skillner.core.span method)": [[8, "skillner.core.Span.is_empty"]], "word (class in skillner.core)": [[9, "skillner.core.Word"]], "__init__() (skillner.core.word method)": [[9, "skillner.core.Word.__init__"]], "slidingwindowmatcher (class in skillner.matchers)": [[10, "skillner.matchers.SlidingWindowMatcher"]], "__init__() (skillner.matchers.slidingwindowmatcher method)": [[10, "skillner.matchers.SlidingWindowMatcher.__init__"]], "enrich_doc() (skillner.matchers.slidingwindowmatcher method)": [[10, "skillner.matchers.SlidingWindowMatcher.enrich_doc"]], "find_span() (skillner.matchers.slidingwindowmatcher method)": [[10, "skillner.matchers.SlidingWindowMatcher.find_span"]], "strtextloader (class in skillner.text_loaders)": [[11, "skillner.text_loaders.StrTextLoader"]], "__init__() (skillner.text_loaders.strtextloader method)": [[11, "skillner.text_loaders.StrTextLoader.__init__"]], "enrich_doc() (skillner.text_loaders.strtextloader method)": [[11, "skillner.text_loaders.StrTextLoader.enrich_doc"]], "porterstemmer (class in skillner.word_processing)": [[12, "skillner.word_processing.PorterStemmer"]], "__init__() (skillner.word_processing.porterstemmer method)": [[12, "skillner.word_processing.PorterStemmer.__init__"]], "stem() (skillner.word_processing.porterstemmer method)": [[12, "skillner.word_processing.PorterStemmer.stem"]], "typeidentifier (class in skillner.word_processing)": [[13, "skillner.word_processing.TypeIdentifier"]], "__init__() (skillner.word_processing.typeidentifier method)": [[13, "skillner.word_processing.TypeIdentifier.__init__"]], "identify_type() (skillner.word_processing.typeidentifier method)": [[13, "skillner.word_processing.TypeIdentifier.identify_type"]], "wordprocessor (class in skillner.word_processing)": [[14, "skillner.word_processing.WordProcessor"]], "__init__() (skillner.word_processing.wordprocessor method)": [[14, "skillner.word_processing.WordProcessor.__init__"]], "enrich_doc() (skillner.word_processing.wordprocessor method)": [[14, "skillner.word_processing.WordProcessor.enrich_doc"]]}})