Search.setIndex({"docnames": ["api", "development", "generated/skillner.core.Candidate", "generated/skillner.core.Document", "generated/skillner.core.Node", "generated/skillner.core.Pipeline", "generated/skillner.core.Sentence", "generated/skillner.core.Span", "generated/skillner.core.Word", "generated/skillner.matchers.SlidingWindowMatcher", "generated/skillner.text_loaders.StrTextLoader", "generated/skillner.word_processing.PorterStemmer", "generated/skillner.word_processing.TypeIdentifier", "generated/skillner.word_processing.WordProcessor", "index"], "filenames": ["api.rst", "development.rst", "generated/skillner.core.Candidate.rst", "generated/skillner.core.Document.rst", "generated/skillner.core.Node.rst", "generated/skillner.core.Pipeline.rst", "generated/skillner.core.Sentence.rst", "generated/skillner.core.Span.rst", "generated/skillner.core.Word.rst", "generated/skillner.matchers.SlidingWindowMatcher.rst", "generated/skillner.text_loaders.StrTextLoader.rst", "generated/skillner.word_processing.PorterStemmer.rst", "generated/skillner.word_processing.TypeIdentifier.rst", "generated/skillner.word_processing.WordProcessor.rst", "index.rst"], "titles": ["API Documentation", "Development", "skillner.core.Candidate", "skillner.core.Document", "skillner.core.Node", "skillner.core.Pipeline", "skillner.core.Sentence", "skillner.core.Span", "skillner.core.Word", "skillner.matchers.SlidingWindowMatcher", "skillner.text_loaders.StrTextLoader", "skillner.word_processing.PorterStemmer", "skillner.word_processing.TypeIdentifier", "skillner.word_processing.WordProcessor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">skillner</span></code>"], "terms": {"start": [1, 2, 7, 9], "fork": 1, "repositori": 1, "clone": 1, "cd": 1, "git": 1, "http": [1, 11], "github": [1, 11], "com": [1, 11], "you_github_usernam": 1, "skillner": 1, "instal": 1, "packag": 1, "mode": [1, 11], "pip": 1, "e": 1, "dev": 1, "et": 1, "voil\u00e0": 1, "you": [1, 11], "re": 1, "readi": 1, "hit": 1, "ground": 1, "run": [1, 5, 13], "To": 1, "build": [1, 4, 9], "document": [1, 4, 5, 8, 9, 10, 13], "follow": 1, "doc": [1, 4, 5, 9, 10, 13], "make": 1, "html": 1, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "window": [2, 7, 9], "slice": [2, 7], "concept_id": 2, "str": [2, 5, 8, 9, 10, 12, 13], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "store": [2, 3, 5, 6, 7, 8, 13], "result": [2, 11, 13], "match": [2, 7, 9], "queri": [2, 9], "paramet": [2, 8, 9, 10, 11, 12, 13], "A": [2, 3, 5, 6, 7, 8, 9, 11, 13, 14], "identifi": [2, 5, 12], "sentenc": [2, 3, 9, 10], "The": [2, 5, 7, 9, 10, 11, 13], "id": 2, "concept": 2, "knowledg": 2, "base": [2, 4, 11, 14], "attribut": [2, 5, 6, 7, 8, 11], "int": [2, 7, 9], "index": [2, 7, 9], "first": [2, 7], "word": [2, 6, 7, 9, 11, 12, 13], "end": [2, 7], "last": [2, 7], "__init__": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "sequenc": [3, 6], "like": [3, 6, 11, 12], "behavior": [3, 6, 11, 12], "i": [3, 5, 6, 7, 9, 11, 12], "list": [3, 6], "addit": [3, 6, 8], "metadata": [3, 6, 8, 13], "throughout": [3, 6, 8], "enrich": [3, 5, 6, 8, 10, 13], "pipelin": [4, 10], "block": 4, "arg": 4, "kwarg": 4, "abstract": 4, "enrich_doc": [4, 9, 10, 13], "appli": [4, 9], "transform": 4, "defin": 5, "wai": 5, "sequenti": 5, "dict_nod": 5, "dict": [5, 8, 9, 13], "node": 5, "dictionari": [5, 8, 9, 13], "correspond": 5, "name": 5, "add_nod": 5, "append": 5, "instanc": [5, 11, 12], "call": [5, 11, 12], "when": [5, 9], "among": 5, "other": [5, 11], "exampl": [6, 8], "from": [6, 7, 8, 9, 11, 14], "import": [6, 8], "": [6, 11], "li_word": 6, "w": [6, 8], "hello": 6, "welcom": 6, "split": 6, "len": 6, "5": 6, "2": 6, "li_span": 6, "span": [6, 9, 13], "all": [6, 7, 11, 13], "candid": 7, "extend": 7, "most": 7, "left": 7, "right": 7, "delimit": 7, "add_candid": 7, "add": 7, "exist": [7, 11], "updat": 7, "is_empti": 7, "bool": [7, 11, 12], "return": [7, 9, 13], "whether": 7, "empti": 7, "consid": [7, 9], "ha": [7, 11, 12], "zero": 7, "size": 7, "behav": 8, "string": [8, 9, 10, 13], "initi": 8, "query_method": 9, "callabl": [9, 13], "max_window_s": 9, "4": 9, "pre_filt": 9, "slide": 9, "us": [9, 10, 11], "shrink": 9, "algorithm": [9, 11], "find": [9, 13], "function": [9, 11, 12, 13], "take": [9, 13], "entri": 9, "aka": 9, "respons": 9, "otherwis": 9, "default": [9, 11, 12], "maximum": 9, "number": 9, "construct": 9, "input": [9, 13], "fals": 9, "everi": [9, 13], "befor": [9, 11, 12], "If": [9, 11, 12], "set": 9, "form": 9, "which": [9, 13], "find_span": 9, "idx_word": 9, "given": 9, "ind": 9, "text": [10, 14], "loader": 10, "creat": 10, "to_lowercas": [11, 12], "true": [11, 12], "nltk_extens": 11, "stemmer": 11, "porter": 11, "stem": 11, "an": [11, 12], "henc": [11, 12], "can": [11, 12], "directli": [11, 12], "lowercas": [11, 12], "martin_extens": 11, "original_algorithm": 11, "see": 11, "below": 11, "more": 11, "detail": 11, "note": 11, "martin": 11, "endors": 11, "sever": 11, "modif": 11, "sinc": 11, "write": 11, "hi": 11, "origin": 11, "paper": 11, "those": 11, "extens": 11, "ar": 11, "includ": 11, "implement": 11, "websit": 11, "addition": 11, "have": 11, "propos": 11, "further": 11, "improv": 11, "nltk": 11, "contributor": 11, "There": 11, "thu": 11, "three": 11, "select": 11, "pass": 11, "appropri": 11, "constant": 11, "constructor": 11, "faith": 11, "deprec": 11, "thi": 11, "version": 11, "distribut": 11, "mani": 11, "languag": 11, "host": 11, "www": 11, "tartaru": 11, "org": 11, "he": 11, "strongli": 11, "recommend": 11, "against": 11, "publish": 11, "onli": 11, "clearli": 11, "understand": 11, "why": 11, "choos": 11, "do": 11, "so": 11, "declar": 11, "frozen": 11, "should": 11, "never": 11, "chang": 11, "devis": 11, "taken": 11, "modifi": 11, "found": 11, "web": 11, "For": 11, "best": 11, "howev": 11, "need": 11, "get": 11, "same": 11, "either": 11, "one": 11, "compat": 11, "dataset": 11, "instead": 11, "refer": 11, "copi": 11, "past": 11, "slight": 11, "cf": 11, "blob": 11, "develop": [11, 14], "py": 11, "m": 11, "suffix": 11, "strip": 11, "program": 11, "14": 11, "3": 11, "1980": 11, "130": 11, "137": 11, "link": 11, "homepag": 11, "classifi": 12, "standard": 12, "stop_word": 12, "check": 12, "type": 12, "identify_typ": 12, "dict_filt": 13, "preprocessor": 13, "wordpreprocessor": 13, "act": 13, "individu": 13, "It": 13, "independ": 13, "smart": 14, "rule": 14, "nlp": 14, "modul": 14, "extract": 14, "skill": 14, "api": 14}, "objects": {"skillner.core": [[2, 0, 1, "", "Candidate"], [3, 0, 1, "", "Document"], [4, 0, 1, "", "Node"], [5, 0, 1, "", "Pipeline"], [6, 0, 1, "", "Sentence"], [7, 0, 1, "", "Span"], [8, 0, 1, "", "Word"]], "skillner.core.Candidate": [[2, 1, 1, "", "__init__"]], "skillner.core.Document": [[3, 1, 1, "", "__init__"]], "skillner.core.Node": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "enrich_doc"]], "skillner.core.Pipeline": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "add_node"], [5, 1, 1, "", "run"]], "skillner.core.Sentence": [[6, 1, 1, "", "__init__"]], "skillner.core.Span": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "add_candidate"], [7, 1, 1, "", "is_empty"]], "skillner.core.Word": [[8, 1, 1, "", "__init__"]], "skillner.matchers": [[9, 0, 1, "", "SlidingWindowMatcher"]], "skillner.matchers.SlidingWindowMatcher": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "enrich_doc"], [9, 1, 1, "", "find_span"]], "skillner.text_loaders": [[10, 0, 1, "", "StrTextLoader"]], "skillner.text_loaders.StrTextLoader": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "enrich_doc"]], "skillner.word_processing": [[11, 0, 1, "", "PorterStemmer"], [12, 0, 1, "", "TypeIdentifier"], [13, 0, 1, "", "WordProcessor"]], "skillner.word_processing.PorterStemmer": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "stem"]], "skillner.word_processing.TypeIdentifier": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "identify_type"]], "skillner.word_processing.WordProcessor": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "enrich_doc"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "document": [0, 3, 14], "word": [0, 8], "processor": 0, "matcher": [0, 9], "text": 0, "loader": 0, "data": 0, "structur": 0, "abstract": 0, "develop": 1, "skillner": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "core": [2, 3, 4, 5, 6, 7, 8], "candid": 2, "node": 4, "pipelin": 5, "sentenc": 6, "span": 7, "slidingwindowmatch": 9, "text_load": 10, "strtextload": 10, "word_process": [11, 12, 13], "porterstemm": 11, "typeidentifi": 12, "wordprocessor": 13, "explor": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Word processor": [[0, "word-processor"]], "Matchers": [[0, "matchers"]], "Text loaders": [[0, "text-loaders"]], "Data structures": [[0, "data-structures"]], "Abstractions": [[0, "abstractions"]], "Development": [[1, "development"]], "skillner.core.Candidate": [[2, "skillner-core-candidate"]], "skillner.core.Document": [[3, "skillner-core-document"]], "skillner.core.Node": [[4, "skillner-core-node"]], "skillner.core.Pipeline": [[5, "skillner-core-pipeline"]], "skillner.core.Sentence": [[6, "skillner-core-sentence"]], "skillner.core.Span": [[7, "skillner-core-span"]], "skillner.core.Word": [[8, "skillner-core-word"]], "skillner.matchers.SlidingWindowMatcher": [[9, "skillner-matchers-slidingwindowmatcher"]], "skillner.text_loaders.StrTextLoader": [[10, "skillner-text-loaders-strtextloader"]], "skillner.word_processing.PorterStemmer": [[11, "skillner-word-processing-porterstemmer"]], "skillner.word_processing.TypeIdentifier": [[12, "skillner-word-processing-typeidentifier"]], "skillner.word_processing.WordProcessor": [[13, "skillner-word-processing-wordprocessor"]], "skillner": [[14, "skillner"]], "Explore the documentation": [[14, "explore-the-documentation"]]}, "indexentries": {"candidate (class in skillner.core)": [[2, "skillner.core.Candidate"]], "__init__() (skillner.core.candidate method)": [[2, "skillner.core.Candidate.__init__"]], "document (class in skillner.core)": [[3, "skillner.core.Document"]], "__init__() (skillner.core.document method)": [[3, "skillner.core.Document.__init__"]], "node (class in skillner.core)": [[4, "skillner.core.Node"]], "__init__() (skillner.core.node method)": [[4, "skillner.core.Node.__init__"]], "enrich_doc() (skillner.core.node method)": [[4, "skillner.core.Node.enrich_doc"]], "pipeline (class in skillner.core)": [[5, "skillner.core.Pipeline"]], "__init__() (skillner.core.pipeline method)": [[5, "skillner.core.Pipeline.__init__"]], "add_node() (skillner.core.pipeline method)": [[5, "skillner.core.Pipeline.add_node"]], "run() (skillner.core.pipeline method)": [[5, "skillner.core.Pipeline.run"]], "sentence (class in skillner.core)": [[6, "skillner.core.Sentence"]], "__init__() (skillner.core.sentence method)": [[6, "skillner.core.Sentence.__init__"]], "span (class in skillner.core)": [[7, "skillner.core.Span"]], "__init__() (skillner.core.span method)": [[7, "skillner.core.Span.__init__"]], "add_candidate() (skillner.core.span method)": [[7, "skillner.core.Span.add_candidate"]], "is_empty() (skillner.core.span method)": [[7, "skillner.core.Span.is_empty"]], "word (class in skillner.core)": [[8, "skillner.core.Word"]], "__init__() (skillner.core.word method)": [[8, "skillner.core.Word.__init__"]], "slidingwindowmatcher (class in skillner.matchers)": [[9, "skillner.matchers.SlidingWindowMatcher"]], "__init__() (skillner.matchers.slidingwindowmatcher method)": [[9, "skillner.matchers.SlidingWindowMatcher.__init__"]], "enrich_doc() (skillner.matchers.slidingwindowmatcher method)": [[9, "skillner.matchers.SlidingWindowMatcher.enrich_doc"]], "find_span() (skillner.matchers.slidingwindowmatcher method)": [[9, "skillner.matchers.SlidingWindowMatcher.find_span"]], "strtextloader (class in skillner.text_loaders)": [[10, "skillner.text_loaders.StrTextLoader"]], "__init__() (skillner.text_loaders.strtextloader method)": [[10, "skillner.text_loaders.StrTextLoader.__init__"]], "enrich_doc() (skillner.text_loaders.strtextloader method)": [[10, "skillner.text_loaders.StrTextLoader.enrich_doc"]], "porterstemmer (class in skillner.word_processing)": [[11, "skillner.word_processing.PorterStemmer"]], "__init__() (skillner.word_processing.porterstemmer method)": [[11, "skillner.word_processing.PorterStemmer.__init__"]], "stem() (skillner.word_processing.porterstemmer method)": [[11, "skillner.word_processing.PorterStemmer.stem"]], "typeidentifier (class in skillner.word_processing)": [[12, "skillner.word_processing.TypeIdentifier"]], "__init__() (skillner.word_processing.typeidentifier method)": [[12, "skillner.word_processing.TypeIdentifier.__init__"]], "identify_type() (skillner.word_processing.typeidentifier method)": [[12, "skillner.word_processing.TypeIdentifier.identify_type"]], "wordprocessor (class in skillner.word_processing)": [[13, "skillner.word_processing.WordProcessor"]], "__init__() (skillner.word_processing.wordprocessor method)": [[13, "skillner.word_processing.WordProcessor.__init__"]], "enrich_doc() (skillner.word_processing.wordprocessor method)": [[13, "skillner.word_processing.WordProcessor.enrich_doc"]]}})